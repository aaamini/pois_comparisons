function methodCell = map_method(methodCell)
% Maps method names

    method_map = struct();
    method_map.bootstrap = 'Bootstrap';
    method_map.mixture_tune = sprintf('Mix Pois');
    method_map.po_is_glmnet = 'POIS-g';
    method_map.po_is_tune = sprintf('POIS');
    method_map.ind_negbin = 'Ind Neg Bin';
    method_map.copula_poi = 'Copula Pois';
    method_map.poisson_sqr_tune = 'Pois SQR';
    method_map.tpgm_tune = 'T-PGM';
    method_map.copula_mult = 'Copula Mult';
    method_map.ind_mult = 'Ind Mult';
    % method_map. = ;

    methodCell = vis.map_keys(methodCell, method_map);
%     methodMap = {...
%         'bootstrap','Bootstrap',...
%         'potts-ising','POIS-g',...
%         'potts-ising-bi','POIS-1.5',...
%         'ind-poisson',sprintf('Ind Pois'),...
%         'ind-mult',sprintf('Ind Mult'),...
%         'ind-negbin',sprintf('Ind Neg Bin'),...
%         'copula-poisson',sprintf('Copula Pois'),...
%         'copula-mult',sprintf('Copula Mult'),...
%         'copula-negbin',sprintf('Copula\nNeg Bin'),...
%         'mixture-tune',sprintf('Mix. Poiss'),...
%         'mixture-50','Mixture Poiss',... % Simplification for p > 100
%         'ggm-tune','Gaussian GM',...
%         'poisson-sqr-tune','Poisson SQR',...
%         'tpgm-tune',sprintf('T-PGM'),...
%         'pgm-tune','PGM',...
%         'flpgm-poisson-tune','FLPGM Poisson',...
%         'flpgm-negbin-tune','FLPGM Neg Bin',...
%         'vine-poisson','Vine Poisson', ...
%         'vine-negbin','Vine Neg Bin', ...
%         'log-normal','Log-Normal', ...   
%         'po-is-glmnet','POIS-g', ...
%         'potts-ising','POIS-g', ...
%         'pois-1.5-glmnet','POIS-1.5 (glmnet)', ...
%         'pois-g-firth','POIS-g (firth)', ...
%         'pois-1.5-firth','POIS-1.5 (firth)', ...
%         'pois-g-bayes','POIS-g (bayes)', ...
%         'pois-1.5-bayes','POIS-1.5 (bayes)', ...
%     };
%   %'pois-g-glmnet','POIS-g (glmnet)', ...
%     methodMap = reshape(methodMap,2,length(methodMap)/2)';
%     for di = 1:length(methodCell)
%         sel = strcmp(methodCell{di},methodMap(:,1));
%         if(sum(sel) == 1)
%             methodCell{di} = methodMap{sel,2};
%         end
%     end
    
end


